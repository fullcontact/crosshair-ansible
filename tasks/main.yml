---
- include: postgres.yml
  when: crosshair_database_local

- name: Install required system libraries
  apt: name={{ item }} state=present
  with_items:
    - python-dev
    - python-virtualenv
    - libffi-dev
    - libssl-dev
    - libpq-dev

- name: Create the crosshair group
  group: name=crosshair system=yes state=present
  notify:
    - restart gunicorn
    - restart celery

- name: Create the gunicorn user
  user: name=gunicorn groups=crosshair append=yes system=yes state=present
  notify: restart gunicorn

- name: Download crosshair
  get_url: url={{ crosshair_download_url }} dest={{ crosshair_install_dir }}
  register: crosshair_download
  notify:
    - restart gunicorn
    - restart celery

- name: Create crosshair directory
  when: crosshair_download.changed
  file: path={{ crosshair_install_dir }}/{{ crosshair_version }}
        state=directory
        owner=gunicorn
        group=crosshair

- name: Unarchive crosshair
  when: crosshair_download.changed
  unarchive: src={{ crosshair_install_dir }}/{{ crosshair_version }}.tar.gz
             dest={{ crosshair_install_dir }}/{{ crosshair_version }}
             owner=gunicorn
             group=crosshair
             copy=no

- name: Update permissions for crosshair directory
  when: crosshair_download.changed
  file: path={{ crosshair_install_dir }}/{{ crosshair_version }}
        mode=0775
        recurse=yes

- name: Symlink crosshair
  when: crosshair_download.changed
  file: dest={{ crosshair_base_dir }}
        src={{ crosshair_install_dir }}/{{ crosshair_version }}
        owner=gunicorn
        group=crosshair
        state=link

- name: Install latest version of pip
  pip: name=pip state=latest virtualenv={{ crosshair_virtualenv }}

- name: Install required python libraries
  pip: requirements={{ crosshair_install_dir }}/crosshair/requirements.txt
       virtualenv={{ crosshair_virtualenv }}
  notify:
    - restart gunicorn
    - restart celery

- name: Create the virtualenv postactivate script to set environment variables
  template: src=virtualenv_postactivate.j2
            dest={{ crosshair_virtualenv }}/bin/postactivate
            owner=gunicorn
            group=crosshair
            mode=0640
            backup=yes

- name: Create the Gunicorn script file
  notify: restart gunicorn
  template: src=gunicorn_start.j2
            dest={{ crosshair_virtualenv }}/bin/gunicorn_start
            owner=gunicorn
            group=crosshair
            mode=0755

- name: Copy gunicorn superivsor config
  notify: restart gunicorn
  template: src=gunicorn.conf.j2
            dest=/etc/supervisor/conf.d/gunicorn.conf
            owner=gunicorn
            group=crosshair
            mode=0755

- name: Ensure that the application file permissions are set properly
  file: path={{ crosshair_install_dir }}/{{ crosshair_version }}
        recurse=yes
        owner=gunicorn
        group=crosshair
        state=directory

- name: Run database migrations
  django_manage:
    command: migrate
    app_path: "{{ crosshair_base_dir }}"
    virtualenv: "{{ crosshair_virtualenv }}"
    settings: "{{ crosshair_settings_file }}"
  environment: crosshair_environment
  notify:
    - restart gunicorn
    - restart celery

- include: celery.yml
